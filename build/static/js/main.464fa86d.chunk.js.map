{"version":3,"sources":["components/AdditionalInfo/index.module.css","components/WeatherData/index.module.css","components/Search/index.module.css","components/AirPollution/index.module.css","components/WeatherForecast/index.module.css","components/Danger/index.module.css","components/Loader/index.module.css","components/Background/index.module.css","components/Error/index.module.css","utils/getSeason.ts","components/Loader/index.tsx","components/Background/index.tsx","context.ts","utils/getDate.ts","components/WeatherForecast/index.tsx","components/AdditionalInfo/index.tsx","utils/getPollutionLevel.ts","utils/tokenize.tsx","components/AirPollution/index.tsx","components/WeatherData/index.tsx","components/Error/index.tsx","components/Danger/index.tsx","components/Search/index.tsx","components/App.tsx","index.jsx"],"names":["module","exports","getSeason","month","Loader","className","s","wrapper","ldsDefault","Background","useState","isLoading","setIsLoading","imageSrc","setImageSrc","Date","getMonth","toString","currentSeason","useMemo","img","Image","onload","src","background","style","backgroundImage","Context","React","createContext","getDate","today","dd","String","padStart","mm","yyyy","getFullYear","days","renderWeekDay","day","date","dt","getDay","WeatherForecast","weatherData","useContext","closestDays","daily","slice","root","map","block","span","substr","description","weather","icon","alt","temp","Math","round","AdditionalInfo","bold","current","humidity","uvi","pressure","wind_speed","getPollutionLevel","key","value","tokenize","formula","split","token","idx","replace","AirPollution","isVisible","pollutionData","setPollutionData","currentPlace","useEffect","fetch","lat","lon","then","response","json","data","list","components","cn","visible","Object","entries","safe","WeatherData","isPollutionBlockVisible","setIsPollutionBlockVisible","buttonText","setButtonText","iconId","Classnames","grow","container","name","tempBlock","feelsLike","feels_like","button","type","onClick","Error","error","Danger","alerts","setAlerts","currentAlerts","forEach","alert","push","event","uniq","filter","item","pos","indexOf","index","clickedAlert","Search","setByUser","input","setInput","suggested","setSuggested","selectedIndex","setSelectedIndex","inputEl","useRef","handleSearch","coordinatesData","filtered","obj","toLowerCase","startsWith","isActive","length","border","search","placeholder","onKeyDown","e","onChange","target","handleChange","ref","searchButton","suggestRoot","itemName","focus","handleClickSuggested","active","population","App","setCoordinatesData","setCurrentPlace","setWeatherData","setError","isShown","setIsShown","Provider","params","find","place","coords","toggleAlert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.464fa86d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AdditionalInfo_root__2aaQu\",\"block\":\"AdditionalInfo_block__1xftk\",\"bold\":\"AdditionalInfo_bold__25LCB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"WeatherData_root__37VSo\",\"container\":\"WeatherData_container__12aJI\",\"grow\":\"WeatherData_grow__1yHHx\",\"button\":\"WeatherData_button__3Xp7w\",\"bold\":\"WeatherData_bold__1bpPb\",\"arrow\":\"WeatherData_arrow__3rG0t\",\"tempBlock\":\"WeatherData_tempBlock__2YXMW\",\"temp\":\"WeatherData_temp__2QNvn\",\"feelsLike\":\"WeatherData_feelsLike__3YADP\",\"description\":\"WeatherData_description__3T6RN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Search_root__1oRKk\",\"wrapper\":\"Search_wrapper__3yVEZ\",\"search\":\"Search_search__13jAz\",\"searchButton\":\"Search_searchButton__2WfLI\",\"suggestRoot\":\"Search_suggestRoot__CAzR_\",\"block\":\"Search_block__MX6da\",\"active\":\"Search_active__1S9hK\",\"border\":\"Search_border__M0Ql0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AirPollution_root__tkDIT\",\"wrapper\":\"AirPollution_wrapper__6MVCP\",\"visible\":\"AirPollution_visible__2MNxh\",\"block\":\"AirPollution_block__1XccE\",\"safe\":\"AirPollution_safe__2UuTV\",\"bold\":\"AirPollution_bold__1PDUG\",\"closeButton\":\"AirPollution_closeButton__3ZKfF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"WeatherForecast_root__2Byr0\",\"block\":\"WeatherForecast_block__1AMez\",\"temp\":\"WeatherForecast_temp__2d9V-\",\"span\":\"WeatherForecast_span__3v_cC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Danger_root__31es5\",\"block\":\"Danger_block__1Mr8W\",\"button\":\"Danger_button__2iDvf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsDefault\":\"Loader_ldsDefault__1tolW\",\"wrapper\":\"Loader_wrapper__1Rubh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Background_background__f1Idv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__2TuXh\"};","const getSeason = (month: string): string => {\n  switch (month) {\n    case '12':\n    case '1':\n    case '2':\n      return 'winter';\n    case '3':\n    case '4':\n    case '5':\n      return 'spring';\n    case '6':\n    case '7':\n    case '8':\n      return 'summer';\n    case '9':\n    case '10':\n    case '11':\n      return 'fall';\n    default:\n      return 'fall';\n  }\n};\n\nexport default getSeason;\n","import React from 'react';\nimport s from './index.module.css';\n\nexport const Loader: React.FC = () => (\n  <div className={s.wrapper}>\n    <div className={s.ldsDefault}>\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n    </div>\n  </div>\n);\n","import React, { useState, useMemo } from 'react';\nimport getSeason from 'utils/getSeason';\nimport { Loader } from 'components/Loader';\nimport s from './index.module.css';\n\nexport const Background: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [imageSrc, setImageSrc] = useState<string>('');\n\n  const month = new Date().getMonth().toString();\n\n  const currentSeason = useMemo(() => getSeason(month), [month]);\n\n  const img = new Image();\n\n  img.onload = (): void => {\n    setImageSrc(`https://source.unsplash.com/1920x1080/?${currentSeason},forest`);\n    setIsLoading(false);\n  };\n  img.src = `https://source.unsplash.com/1920x1080/?${currentSeason},forest`;\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <div\n        className={s.background}\n        style={{\n          backgroundImage: `url(${imageSrc})`,\n        }}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { ContextType } from 'types';\n\nconst Context = React.createContext<ContextType>({} as ContextType);\n\nexport default Context;\n","const getDate = (): string => {\n  const today = new Date();\n  const dd = String(today.getDate()).padStart(2, '0');\n  const mm = String(today.getMonth() + 1).padStart(2, '0');\n  const yyyy = today.getFullYear();\n\n  return `${dd}/${mm}/${yyyy}`;\n};\n\nexport default getDate;\n","import React, { useContext, useMemo } from 'react';\nimport Context from 'context';\nimport { WeatherDataDailyType } from 'types';\nimport s from './index.module.css';\n\nconst days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\nconst renderWeekDay = (day: WeatherDataDailyType) => {\n  const date = new Date(day.dt * 1000);\n  return days[date.getDay()];\n};\nexport const WeatherForecast: React.FC = () => {\n  const { weatherData } = useContext(Context);\n  const closestDays = useMemo(() => weatherData?.daily.slice(0, 3), [weatherData]);\n  if (!weatherData?.daily) {\n    return (\n      <div>404. Something went wrong!</div>\n    );\n  }\n  return (\n    <div className={s.root}>\n      {closestDays?.map((day) => (\n        <div key={day.dt} className={s.block}>\n          <span className={s.span}>{renderWeekDay(day).substr(0, 3)}</span>\n          <div className={s.description}>\n            <img src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`} alt=\"icon\" />\n          </div>\n          <div className={s.temp}>{Math.round(day.temp.day)}</div>\n        </div>\n      ))}\n\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport Context from 'context';\nimport s from './index.module.css';\n\nexport const AdditionalInfo: React.FC = () => {\n  const { weatherData } = useContext(Context);\n  return (\n    <div className={s.root}>\n      <div className={s.block}>\n        {' '}\n        <span className={s.bold}>Humidity</span>\n        {' '}\n        {weatherData?.current?.humidity}\n        %\n      </div>\n      <div className={s.block}>\n        <span className={s.bold}>UVI</span>\n        {' '}\n        {weatherData?.current?.uvi}\n      </div>\n      <div className={s.block}>\n        <span className={s.bold}>Pressure</span>\n        {' '}\n        {weatherData?.current?.pressure}\n        mb\n      </div>\n      <div className={s.block}>\n        <span className={s.bold}>Wind</span>\n\n        {' '}\n        {weatherData?.current?.wind_speed}\n        m/s\n      </div>\n    </div>\n  );\n};\n","const getPollutionLevel = (key: string, value: number): string => {\n  if ((key === 'co' || key === 'no2') && value <= 100) {\n    return 'safe';\n  } if ((key === 'o3' || key === 'so2') && value <= 200) {\n    return 'safe';\n  } if ((key === 'pm2_5' || key === 'no' || key === 'nh3') && value <= 20) {\n    return 'safe';\n  } if (key === 'pm10' && value <= 40) {\n    return 'safe';\n  }\n  return '';\n};\n\nexport default getPollutionLevel;\n","import React from 'react';\n\nconst tokenize = (formula: string) => formula\n  .split(/(\\d*_?\\d+)/)\n  .map((token, idx) => (idx % 2\n    ? <sub key={idx}>{token.replace('_', '.')}</sub>\n    : token));\n\nexport default tokenize;\n","import React, { useState, useEffect, useContext } from 'react';\nimport Context from 'context';\nimport getPollutionLevel from 'utils/getPollutionLevel';\nimport tokenize from 'utils/tokenize';\nimport cn from 'classnames';\nimport s from './index.module.css';\n\ntype AirPollutionPropsType = {\n  isVisible: boolean\n}\ntype PollutionDataType = {\n  [x: string]: number\n}\nexport const AirPollution: React.FC<AirPollutionPropsType> = ({ isVisible }) => {\n  const [pollutionData, setPollutionData] = useState<PollutionDataType>({});\n  const { currentPlace } = useContext(Context);\n\n  useEffect(() => {\n    fetch(`https://api.openweathermap.org/data/2.5/air_pollution?lat=${currentPlace?.lat}&lon=${currentPlace?.lon}&appid=c33f7e6f45a0a786c34f2e1d3407f292&&units=metric`)\n      .then((response) => response.json())\n      .then((data) => {\n        setPollutionData(data.list[0].components);\n      });\n  }, [currentPlace]);\n\n  return (\n    <div className={s.root}>\n      <div className={cn([s.wrapper], { [s.visible]: isVisible })}>\n        {Object.entries(pollutionData).map(([key, value]) => (\n          <div\n            className={\n              cn([s.block], { [s.safe]: getPollutionLevel(key, value) === 'safe' })\n            }\n            data-element={key}\n            key={key}\n          >\n            <span className={s.bold}>\n              {tokenize(key)}\n            </span>\n            :\n            {' '}\n            {Math.round(value)}\n          </div>\n        ))}\n      </div>\n    </div>\n\n  );\n};\n","import { useContext, useState } from 'react';\nimport Context from 'context';\nimport Classnames from 'classnames';\nimport getDate from 'utils/getDate';\nimport { WeatherForecast } from 'components/WeatherForecast';\nimport { AdditionalInfo } from 'components/AdditionalInfo';\nimport { AirPollution } from 'components/AirPollution';\nimport s from './index.module.css';\n\nexport const WeatherData: React.FC = () => {\n  const { weatherData, currentPlace } = useContext(Context);\n  const [isPollutionBlockVisible, setIsPollutionBlockVisible] = useState(false);\n  const [buttonText, setButtonText] = useState('Learn more about pollution');\n\n  if (!weatherData?.current) return null;\n  const iconId = weatherData.current.weather[0].icon;\n  const togglePollutionBlockVisibility = () => {\n    setIsPollutionBlockVisible(!isPollutionBlockVisible);\n\n    if (isPollutionBlockVisible) {\n      setButtonText('Hide pollution data');\n    } else {\n      setButtonText('Show pollution data');\n    }\n  };\n  return (\n    <>\n      <div className={Classnames([s.root], { [s.grow]: isPollutionBlockVisible })}>\n        <div className={s.container}>\n          <div>\n            Россия,\n            {' '}\n            {currentPlace?.name}\n          </div>\n          <div>{getDate()}</div>\n          <div className={s.tempBlock}>\n            <div>\n              <div className={s.temp}>\n                Now:\n                {' '}\n                {Math.round(weatherData.current.temp)}\n              </div>\n              <div className={s.feelsLike}>\n                <span className={s.bold}>Feels like: </span>\n                {Math.round(weatherData.current.feels_like)}\n              </div>\n            </div>\n            <div className={s.description}>\n              <img src={`http://openweathermap.org/img/wn/${iconId}@2x.png`} alt=\"icon\" />\n            </div>\n          </div>\n          <AdditionalInfo />\n          <WeatherForecast />\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={togglePollutionBlockVisibility}\n          >\n            {buttonText}\n            &nbsp;\n            <i className=\"bi bi-arrow-right\" />\n          </button>\n        </div>\n        <AirPollution isVisible={isPollutionBlockVisible} />\n\n      </div>\n\n    </>\n  );\n};\n","import React from 'react';\nimport s from './index.module.css';\n\nexport const Error: React.FC = () => {\n  const errorMsg = \"Oops! There's no such city!\";\n  return (\n    <div className={s.error}>{errorMsg}</div>\n  );\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport Context from 'context';\nimport s from './index.module.css';\n\nexport const Danger: React.FC = () => {\n  const { weatherData } = useContext(Context);\n  const [alerts, setAlerts] = useState<string[]>([]);\n\n  useEffect(() => {\n    const currentAlerts: string[] = [];\n    if (typeof weatherData?.alerts !== 'undefined') {\n      weatherData.alerts.forEach((alert) => {\n        currentAlerts.push(alert.event);\n      });\n      const uniq = currentAlerts.filter((item, pos) => currentAlerts.indexOf(item) === pos);\n      setAlerts(uniq);\n    }\n  }, [weatherData]);\n\n  const handleClick = (clickedAlert: string): void => {\n    setAlerts(alerts.filter((item) => item !== clickedAlert));\n  };\n\n  if (!weatherData?.alerts) return null;\n\n  return (\n    <>\n\n      <div className={s.root}>\n        {alerts.map((alert, index) => (\n          alert && (\n            <div key={index} className={s.block}>\n              <p>\n                {alert}\n                . Be careful!\n              </p>\n              <button className={s.button} onClick={() => handleClick(alert)} type=\"button\">x</button>\n            </div>\n          )\n\n        ))}\n      </div>\n\n    </>\n  );\n};\n","import React, {\n  useState, useContext, useEffect, useRef,\n} from 'react';\nimport Classnames from 'classnames';\nimport Context from 'context';\nimport { CoordinateType } from 'types';\nimport s from './index.module.css';\n\ntype SuggestedType = CoordinateType & {isActive?: boolean}\n\nexport const Search: React.FC = () => {\n  const [input, setInput] = useState({ value: '', setByUser: false });\n  const [suggested, setSuggested] = useState<SuggestedType[]>([]);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const inputEl = useRef<HTMLInputElement>(null);\n\n  const { handleSearch, coordinatesData } = useContext(Context);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInput({ value: e.target.value, setByUser: true });\n  };\n  const handleClick: React.MouseEventHandler<HTMLButtonElement> = () => {\n    handleSearch(input.value);\n    setSuggested([]);\n    setInput({ value: '', setByUser: false });\n  };\n  const handleClickSuggested = (itemName: string) => {\n    setInput({ value: itemName, setByUser: false });\n    setSuggested([]);\n    inputEl?.current?.focus();\n  };\n  const handleKey = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      handleSearch!!(input.value);\n      setSuggested([]);\n      setInput({ value: '', setByUser: false });\n    } else if (e.key === 'ArrowUp') {\n      if (selectedIndex === null || selectedIndex === 0) {\n        setSelectedIndex(suggested.length - 1);\n      } else {\n        setSelectedIndex(selectedIndex - 1);\n      }\n    } else if (e.key === 'ArrowDown') {\n      if (selectedIndex === null || selectedIndex === suggested.length - 1) {\n        setSelectedIndex(0);\n      } else {\n        setSelectedIndex(selectedIndex + 1);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (typeof coordinatesData !== 'undefined' && input.setByUser) {\n      const filtered = coordinatesData.filter(\n        (obj) => obj.name.toLowerCase().startsWith(input.value.toLowerCase()),\n      );\n      filtered.map((item: any) => {\n        item.isActive = false;\n        return item;\n      });\n      setSuggested(filtered.slice(0, 5));\n    }\n  }, [input, coordinatesData]);\n\n  useEffect(() => {\n    if (suggested.length > 0) {\n      setInput({ value: suggested[selectedIndex].name, setByUser: false });\n    }\n  }, [selectedIndex]);\n  return (\n    <div className={s.root}>\n      {/* Search */}\n      <div\n        className={Classnames([s.wrapper], { [s.border]: suggested.length > 0 })}\n      >\n        <div className={s.icon} />\n\n        <input\n          className={s.search}\n          placeholder=\"Enter a city\"\n          onKeyDown={handleKey}\n          onChange={(e) => handleChange(e)}\n          type=\"text\"\n          value={input.value}\n          ref={inputEl}\n        />\n        <button\n          onClick={handleClick}\n          type=\"button\"\n          className={s.searchButton}\n        >\n          <i className=\"bi bi-search\" />\n\n        </button>\n      </div>\n      {/* Suggest */}\n      <div className={s.suggestRoot}>\n        {suggested.map((item: SuggestedType, index) => input.value\n          && (\n          <div\n            aria-hidden=\"true\"\n            onClick={() => handleClickSuggested(item.name)}\n            className={Classnames([s.block],\n              { [s.active]: index === selectedIndex })}\n            key={item.population}\n          >\n            {item.name}\n          </div>\n          ))}\n      </div>\n    </div>\n\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { ContextType } from 'types';\nimport { Background } from 'components/Background';\nimport { WeatherData } from 'components/WeatherData';\nimport { Error } from 'components/Error';\nimport { Danger } from 'components/Danger';\nimport { Search } from 'components/Search';\nimport Context from 'context';\n\nimport '../index.css';\n\nfunction App() {\n  const [coordinatesData, setCoordinatesData] = useState<ContextType['coordinatesData']>([]);\n  const [currentPlace, setCurrentPlace] = useState<ContextType['currentPlace']>(\n    { lat: '55.75583', lon: '37.61778', name: 'Москва' },\n  );\n  const [weatherData, setWeatherData] = useState<ContextType['weatherData']>();\n  const [error, setError] = useState<boolean>(false);\n  const [isShown, setIsShown] = useState<boolean>(true);\n  useEffect(() => {\n    fetch('https://raw.githubusercontent.com/pensnarik/russian-cities/master/russian-cities.json')\n      .then((response) => response.json())\n      .then((data) => {\n        setCoordinatesData(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${currentPlace?.lat}&lon=${currentPlace?.lon}&appid=c33f7e6f45a0a786c34f2e1d3407f292&units=metric`)\n      .then((response) => response.json())\n      .then((data) => {\n        setWeatherData(data);\n      });\n  }, [currentPlace]);\n\n  const handleSearch: ContextType['handleSearch'] = (params: string) => {\n    const current = coordinatesData?.find((place) => place.name === params);\n    if (current) {\n      setCurrentPlace({ ...current.coords, name: current.name });\n\n      setError(false);\n    } else {\n      setError(true);\n    }\n  };\n  const toggleAlert: ContextType['toggleAlert'] = () => {\n    setIsShown(!isShown);\n  };\n  return (\n    <div className=\"App\">\n      <Context.Provider value={{\n        weatherData,\n        handleSearch,\n        toggleAlert,\n        currentPlace,\n        coordinatesData,\n      }}\n      >\n        <div className=\"container\">\n          <header>\n            <Search />\n          </header>\n          {isShown && <Danger />}\n          <Background />\n          {error ? <Error /> : <WeatherData />}\n        </div>\n      </Context.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}